{"version":3,"sources":["utils.js","WebAPI.js","contexts.js","pages/LoginPage/LoginPage.js","pages/HomePage/HomePage.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","BASE_URL","getMe","getItem","fetch","headers","authorization","then","res","json","AuthContext","createContext","ErrorMessage","styled","div","LoginPage","setUser","useContext","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","onSubmit","e","method","body","JSON","stringify","login","data","ok","message","response","toString","push","value","onChange","target","type","Root","PostContainer","PostTitle","Link","PostDate","Post","post","to","id","title","Date","createdAt","toLocaleString","HomePage","posts","setPosts","useEffect","map","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftConatiner","Header","location","useLocation","user","pathname","onClick","App","Provider","exact","path","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"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","file":"static/js/main.2b2cf8c5.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((response) => {\n        if (response.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push(\"/\");\n      });\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\nimport { getPosts } from \"../../WebAPI\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts().then((posts) => setPosts(posts));\n  }, []);\n\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n    </Root>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n  box-sizing: border-box;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: cneter;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0, 0, 0, 0.1);\n  `}\n`;\n\nconst LeftConatiner = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <HeaderContainer>\n      <LeftConatiner>\n        <Brand>我的第一個部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftConatiner>\n      <NavbarList>\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n            登入\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport Header from \"../Header\";\nimport { AuthContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // TDOO: 有 token 才 call api\n    getMe().then((response) => {\n      if (response.ok) {\n        setUser(response.data);\n      }\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    primary_300: \"#3333dd\",\n    primary_400: \"#e33e3e\",\n    primary_500: \"#af0505\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}